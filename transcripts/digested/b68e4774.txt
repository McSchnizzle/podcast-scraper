[00:00] Okay.
[00:04] Um,
[00:09] let me see.
[00:15] I think this is fine.
[00:19] Hello Bobby Wizard if you are still
[00:22] here.
[00:26] Hope you all are doing well.
[00:36] Hello Bobby. Nice to see you.
[00:39] Nice spider.
[00:41] Shog bomb.
[00:45] What is up?
[00:48] Jamie and Jamie.
[00:51] Good good uh
[00:55] good day everyone. Nice to see you.
[01:01] Sunni, I saw you did a challenge. I
[01:05] Jeremy,
[01:07] nice to see you.
[01:15] Are Sunni, you you complete the red tune
[01:17] challenge, right?
[01:21] Uh Jamie, uh I'll check I'll check after
[01:24] the stream.
[01:30] Uh, we fixed that. No problem.
[01:33] Yeah.
[01:36] Yeah. After we launched that challenge
[01:39] on the
[01:45] on the boss Discord server. There's like
[01:48] a lot of people who has done it. 51 41
[01:53] people.
[01:56] Yeah, there's a lot of solutions,
[02:00] but uh yeah, you're probably not going
[02:03] to beat uh lowest token solutions
[02:07] anyway. Or you can you can equalize it.
[02:10] Maple Dev Wizard, nice to see you.
[02:17] So, yeah, we have we had had over 51,000
[02:21] attempts. So, I'm pretty happy. I think
[02:24] this this went pretty well. 1,700 unique
[02:28] sessions.
[02:32] Okay, Jamie, that's pretty good. I
[02:34] didn't get the system prompt.
[02:37] You You would have been really close
[02:39] then.
[02:43] So, I'm going to do like uh on the end
[02:45] of the week, I'm going to do a video
[02:48] where we kind of we're going to do the
[02:50] draw for the $100.
[02:52] And this is this side bet here is like a
[02:55] bossy discord price. So I guess I'm
[02:59] going to have to draw the people that
[03:00] just used one token to solve it. Uh if
[03:05] they let me I'm going to tell you how
[03:07] they did it. I'm going to ask them. Uh I
[03:10] know how they did it now, but uh it's
[03:12] pretty crazy. Uh something I didn't
[03:14] think about.
[03:18] So today, uh, I've been just playing
[03:20] around with, uh, I want to do a video
[03:23] where I do a Claude 24
[03:28] 7 project.
[03:30] So this morning, I'm just playing
[03:32] around, figure out how I should do it.
[03:36] So I tried to make uh I tried to fork
[03:39] something into kind of my own thing,
[03:43] but I'm not I haven't tested it yet.
[03:47] Hello, Edgar. I didn't hear from you,
[03:49] Edgar, on LinkedIn yet. How's your
[03:52] project?
[03:54] Unreal Link, nice to see you,
[03:57] Bobby. Yeah, it's a good collab.
[04:02] Uh, I tried way too long for that one.
[04:05] Think I got close. It's a pirate.
[04:08] That's funny, Jeremy. Uh, you just have
[04:10] to wait and see for the the video.
[04:15] Uh there are some clever people there on
[04:17] that Discord.
[04:21] So let me know, Edgar, if how's your
[04:23] project doing? If we're going to
[04:25] schedule something.
[04:33] Okay, I see. Yeah, that's nice. No
[04:36] stress. We got time.
[05:11] sessions now can solve the really hard
[05:14] uh to find CPU panic
[05:17] that cost you a day.
[05:20] Okay, that's cool. I'm looking forward
[05:22] to hearing more about it. Uh the
[05:24] Discord. Yeah, the Discord. Yeah. Um,
[05:31] haven't really
[05:35] done much about the Discord yet. I need
[05:37] to decide if we're going to continue
[05:39] with the Ninth Brain Discord server or
[05:42] if we're going to rework it into
[05:44] something else. Uh, I just need a bit
[05:46] more time. Uh, but I'm going to figure
[05:48] it out.
[06:02] So, uh yeah, this is my 247 uh cloud
[06:06] code attempt. It has some hooks and
[06:08] stuff. Uh but I haven't tried I haven't
[06:10] had time to test it yet. So, that is
[06:13] kind of what I wanted to do today.
[06:16] So, I'm going to check the We have a
[06:18] task uh file here. Uh, it's called, what
[06:22] do I call it?
[06:28] 30 second commercial. As soon as the
[06:30] stream started,
[06:33] yeah, I I don't have control over the
[06:36] the ads, right?
[06:39] I I just start the stream. I don't know
[06:42] how to control the commercial stuff.
[06:49] It's just auto, I think.
[06:57] Yeah, that's going to be an interesting
[06:59] project.
[07:00] Uh, Edgar.
[07:07] Okay, so I just need to set this up.
[07:36] So, I'm going to launch Claude
[07:44] uh read
[07:46] Q.
[07:57] Uh, I built and use a very basic version
[08:00] so I could use Gemini as the manager
[08:03] and clothe code for the workers.
[08:07] Cool.
[08:38] So, I'm quite excited this uh week to
[08:40] see if we get the new Gemini model. Uh
[08:43] there's a lot of I don't I'm not so much
[08:45] on X platform and stuff. Uh, but I've
[08:48] seen like a lot of people talk about
[08:52] Gemini 3,
[08:56] so I'm quite excited about that.
[08:59] Bobby says, "Compounding the models can
[09:01] be powerful in a workflow." Yeah, I've
[09:03] been experimenting with GT5 and cloud
[09:06] code.
[09:08] Maple says, uh, stopped using VS Code
[09:11] now and using T-max, Neoim, and Cloud
[09:14] Code.
[09:16] How is that working for you?
[09:24] Hello JS, how are you today?
[09:47] How the hell do you want that?
[10:13] Yeah, I see a lot of people talk about
[10:14] T-Max. I have never tried it, but uh
[10:19] maybe it's time to look at it.
[11:08] Hello Adoba. Uh Ado, how are you?
[11:13] Works great but still learning the T-Max
[11:15] commands.
[11:18] You used to do all your code in Vim.
[11:22] Jamie says he loves T-Max for the fact
[11:24] you can detach then sometimes uh switch
[11:26] to the iPad and SSH in. Okay, that's
[11:29] pretty cool. So, if I'm going to do my
[11:32] 24hour project, maybe I should be able
[11:35] to SSH in and yeah, see how it's going.
[12:08] Ed has just added them. You can use the
[12:11] editor for prompts inside open code.
[12:53] I saw your latest video where you
[12:55] combine codeex and cloud code.
[13:00] Uh I like that but it isn't really they
[13:04] are not connected.
[13:05] Uh, but I just wanted to give Codeex
[13:08] some more opportunities
[13:10] and I've been pretty happy with Codeex
[13:13] and the chat chip login with Chip 5.
[13:17] So, I kind of like it.
[13:22] Jamie says, uh, because you detach, you
[13:25] can close the terminal. Okay, cool.
[13:29] Yeah, this project is uh has to have the
[13:32] terminal open. So, that is definitely
[13:35] something I'm going to check out.
[13:39] Edgar will be able to give uh better
[13:42] T-max advice.
[13:45] Yeah, it could be cool. Uh if he could
[13:48] we can maybe do like um
[13:51] if you can explain it and show how it
[13:53] works. Could be pretty cool.
[14:05] What are we doing here?
[14:39] Do you mean uh me, Jamie?
[14:44] I'm just looking at uh
[14:49] I just want to figure out if I can do
[14:51] this.
[14:54] this um
[14:58] 24hour thing.
[15:00] So, we have the session start hook here.
[15:03] It's a bit annoying now because uh
[15:06] I just need to figure it out.
[15:19] So, my plan was to be ready with this
[15:21] until the stream started, but I just
[15:23] spent too much time.
[15:26] I couldn't uh get ready. So, that's a
[15:29] bit annoying.
[15:33] Uh, but it's fine. Just going to see how
[15:36] it goes. If I can't figure it out now, I
[15:39] will figure it out.
[15:49] So I'm really interested in Gemini 3
[15:54] uh especially about the pricing and the
[15:57] integration with uh
[16:02] with C
[16:04] sorry integration with the Gemini CLI
[16:07] Okay.
[16:29] Uh, do a search for T-Max cloud code.
[16:31] There's a cool video on orchestrating
[16:34] agents uh to spawn worker agents to work
[16:37] on separate tasks.
[16:40] Uh I still need to implement the actual
[16:42] execution for a project for at least
[16:44] being able to grab a screenshot. Yeah, I
[16:46] see what you mean. Uh there's quite some
[16:48] stuff to solve when everything's remote.
[16:51] I can totally see that. Uh yeah, Maple,
[16:54] I might check it out.
[17:41] Hello Riches.
[18:03] So the poly market now on Google
[18:06] releasing Gemini is at 98%
[18:10] before the weekend.
[18:13] So I guess they probably are going to
[18:15] release it before the weekend.
[18:48] So the idea behind this is that uh we
[18:52] are actually using uh
[18:56] C npx CCC usage in the background to
[19:02] to try to monitor if we have reached the
[19:05] usage limit
[19:08] like a rate limit checker.
[19:10] Hello Powell. How are you?
[19:13] What is up?
[19:55] laying the toiles. Okay.
[20:23] I can't I can't use cloud code when I
[20:26] have this hook error. I I drives me
[20:28] crazy.
[20:44] Yeah, I could see that
[20:48] tiles is uh
[20:51] takes some time, right?
[21:01] What are your expectations for Gemini?
[21:05] Apart from deep search, I can't really
[21:07] find much practical use for it. So, what
[21:10] I am excited for Gemini is um
[21:16] if they have any updates on kind of the
[21:20] how well the token window is working.
[21:23] Uh, of course you you probably want to
[21:27] you probably want to limit the token uh
[21:30] as much as you can, but I have some use
[21:33] cases sometimes where I use a lot of
[21:35] tokens here. Like I put in like a bunch
[21:38] of information and sometimes it's really
[21:41] good like 500,000.
[21:45] So I want to see if they have made any
[21:47] progress on that part and of course the
[21:50] pricing and stuff like that.
[22:18] I hope they keep the 1 million but dig
[22:20] more into uh aentic tulus. Yeah, that is
[22:23] perfect. Right. So the tulus the reason
[22:27] I'm not using Gemini 2 um
[22:31] 5 pro so much now is because they are
[22:34] lacking in tulus. They are not they are
[22:36] not so good as gypt 5 and claw code at
[22:41] running like aentic operations.
[22:46] So that's why
[22:49] I don't use this that much. But if they
[22:51] come out and they have made some big
[22:53] improvements on
[22:56] uh aentic tooling that could be very
[22:58] cool.
[23:01] Yeah, I agree.
[23:07] If they release Gemini now with um
[23:14] great tulius, it's going to be really
[23:17] interesting and of course a good price.
[23:25] It's going to be really interesting.
[24:16] out of three Cloex CLI and Gemini CLI. I
[24:19] believe Google has the modes to catch up
[24:21] on the Aentic stuff. Yeah, I think so
[24:25] too. For sure.
[25:11] impression. Uh what is your impression
[25:12] of compounding models and token count?
[25:19] Uh hello Ben, how are you? Compounding
[25:23] models and token count.
[25:26] Uh, do you mean like
[25:29] like using cloud code and
[25:33] uh
[25:35] uh sorry uh by using like opus and gypt
[25:40] 5 and uh do you mean like with token
[25:42] count that you're going to spread it
[25:44] around or
[25:46] Bobby?
[25:58] I'm slipping here.
[26:07] Reinforcement learning and self-arning
[26:10] combo
[26:12] is interesting.
[26:14] Yeah,
[26:18] but doesn't have to be doesn't that have
[26:20] to be on the model level, machine
[26:22] learning level?
[27:00] multiple models.
[27:07] Yeah, maybe it was a stupid idea of me
[27:09] using this hooks here. I uh
[27:12] I don't understand hooks well enough yet
[27:15] to know what is wrong here.
[27:19] Uh there's there's a there's a JSON
[27:21] output validation failing. I know that,
[27:22] but I don't have
[27:27] I don't have the schema yet for it. Is
[27:29] that the issue? I guess.
[27:38] Yeah, I guess so.
[27:43] Okay. Good luck in the meeting.
[28:20] So for the 24hour system, you have to
[28:22] run it in u yolo mode. So it has to be
[28:26] this dangerous permissions set to yes,
[28:30] of course.
[28:40] I guess all uh reinforcement learning
[28:46] kind of has to be in the model level,
[28:48] right? I guess
[28:51] or maybe you can have some kind of
[28:53] trick. I haven't really played around
[28:55] with that too much.
[29:51] YOLO for all your projects. Okay, that's
[29:53] pretty good
[29:56] for everything.
[29:59] Nice weather.
[30:42] Hello Joe
[30:46] 24 sub agent. Uh not really a sub agent.
[30:51] I just want to set up like a project
[30:52] where the So I'm going to do a video of
[30:55] it. So the project is going to be I'm
[30:57] going to I I guess I can just say it. So
[30:59] the project is to I want to set up cloud
[31:02] code. So it's going to run continuously
[31:05] autonomous and recreate a guesser
[31:11] clone
[31:13] with features. So the idea is I'm going
[31:15] to set everything up and then I'm just
[31:18] going to start it and hopefully after 24
[31:22] hours everything should be good. Uh but
[31:26] uh I was supposed to have this ready
[31:28] before the stream, but uh I was a bit
[31:30] late, so I haven't really
[31:34] got a hold of it. Right.
[32:12] Uh thought if I can use true yolo in
[32:15] wind surf I will do it there too.
[32:20] Hello David. Nice to see you back. Yeah
[32:22] I personally I haven't used dangerous uh
[32:26] allow permissions yolo too much.
[32:32] I Seven.
[33:27] Um, I wish I could talk more while I did
[33:30] this, but I just have to think of it
[33:32] just to see if we can make it work
[33:34] during the stream.
[33:53] clothe yolo every day
[34:04] uh all throughout the day for a couple
[34:06] of weeks now. Uh not a single issue.
[34:08] No, that's nice. I have never had any
[34:10] issues with it, too. But you read his
[34:12] stories on Reddit and stuff like um
[34:19] people deleted the database and stuff. I
[34:22] did actually delete a database here the
[34:24] other day uh of something I needed, but
[34:28] that was 100% my fault.
[34:40] Yeah. Yeah. Of course. Ner just nice to
[34:44] see you. Moava, nice to see you, too.
[34:47] Uh, I'm just working on like uh some 247
[34:50] project in Clo. I'm going to do for a
[34:52] video. Tom, how are you?
[34:56] Open code was yolo by default. Ah, but
[35:00] you can adjust it, right, Edgar?
[35:27] just do a feature add yolo mode in an
[35:30] isolated instance
[35:32] with a clone of a repo. Yeah, that's
[35:34] pretty smart.
[35:36] Michael, how are you?
[35:40] Uh
[35:42] we are just or me at least I'm just
[35:45] doing um
[35:47] trying to come up with a way to use to
[35:50] set up cloud code so I can do like a
[35:53] 24hour run like so it won't get um
[36:00] so we have some Damon scripts and stuff
[36:02] here so it's going to run continuously
[36:05] for yeah I guess all day long.
[36:10] Uh, but I didn't run it now in YOLO. So,
[36:12] I'm just going to watch it and see what
[36:13] happens.
[36:31] Yeah, that's what I'm going to figure
[36:32] out. Uh, Shop, I'm going to figure out a
[36:35] way to do it.
[36:38] If you're going to use a scratch pad, if
[36:41] you're going to use compact.
[36:49] So, I'm just going to see what happens.
[36:53] I will figure it out though.
[37:00] So we are using uh some hooks
[37:05] uh some hooks with some
[37:08] we have a setup that is linked up to CC
[37:11] usage to keep track of the rate limit.
[37:15] So we know when we will reach kind of
[37:17] the rate limit, right?
[37:32] But, uh, I think I need a bit more time
[37:34] before I'm ready.
[37:55] Okay. So, we have the dashboard.
[38:06] Yeah. Uh, I haven't I haven't like
[38:10] I'm not I haven't decided yet how I'm
[38:12] going to do this.
[38:14] So, I'm kind of just trying different
[38:17] things.
[38:36] So here we have the
[38:41] the dashboard.
[38:54] Uh, but I was supposed to my plan was to
[38:57] have this ready, but I haven't um
[39:01] gotten so far yet.
[39:09] Uh, do you guys use JSON contact
[39:12] profiles in your flow?
[39:15] and Rico, nice to see you.
[39:18] Uh, I have not used that.
[39:22] Uh, but I know some people do
[39:45] So, I had a really nice read this
[39:47] weekend about uh let me see if I can
[39:50] find it.
[39:55] Can't remember where I saw it.
[40:00] Or was it a podcast?
[40:03] Super assistance. Uh, did you complete
[40:06] it?
[40:10] Kovshik, nice to see you. English, nice
[40:13] to see you back here.
[40:56] After 1 hour, it took you 10 messages.
[41:00] Okay.
[41:03] Oh, that's pretty good.
[41:05] Hey, push the model. How are you?
[41:09] What is the agenda for today?
[41:12] So, my plan was to have kind of my
[41:14] 24hour
[41:16] uh cloud code system ready for the
[41:19] stream to test it out. Uh but I didn't
[41:22] come uh that far.
[41:26] So, I uh now I'm not 100% sure what to
[41:30] do. Uh I might need to just finish it
[41:33] after the stream.
[41:36] So, we'll see. But that is the plan.
[41:40] And maybe tomorrow I'm going to do the
[41:46] claude code Reddit
[41:49] contest or something.
[41:54] Contest competition. This one. Uh I
[41:58] might do this tomorrow on the stream if
[42:00] I have time.
[42:04] Arsuni says he learned a lot from the
[42:06] challenge. Potential vulnerabilities
[42:11] uh influenced how AI solutions should be
[42:13] designed. Yeah, that is why I've been
[42:16] kind of looking into it lately because
[42:20] the idea behind the challenge I did was
[42:22] to learn how you can start um
[42:28] you can build a safe system, right?
[42:33] uh on the other side right so that is
[42:35] what I did
[42:38] Edgar says uh building a manuslike file
[42:42] management and learning uh extensions
[42:46] uh on my open code fork okay that's
[42:49] pretty cool yeah the open code fork open
[42:52] code fork is pretty coolsky
[42:57] says uh the N8 test it will be it. Yeah,
[43:02] I've still haven't gotten around to
[43:03] that, but I'm going to try it.
[43:11] Context problem for longer tasks.
[43:14] Yeah, that's a hard that's a challenge
[43:15] to solve, right? But a good one.
[43:19] The lesson from the challenge, you
[43:21] cannot secure LLMs.
[43:25] It's at least difficult. Uh I'm no
[43:27] expert, but I just made a challenge to
[43:30] try to learn.
[43:33] So I set up guard rails. Uh but still uh
[43:36] I think we have a pretty good uh rating
[43:39] though. Uh uh it's not that great. But
[43:42] if you look at the leaderboard, it's uh
[43:47] 20.2%.
[43:53] You got to jump on Nate and a lot of
[43:56] good linking with all versions of cloth
[43:59] access.
[44:02] Yeah, but I don't know what I should use
[44:04] it for. So, what do you guys use N for?
[44:10] I don't know what I should use it for.
[45:12] uh small workflows where I can leverage
[45:15] uh the included connectors
[45:19] back end for 11 lamps voice AI
[45:22] uh Kovsky use it for crypto agent. Okay,
[45:25] that's cool.
[45:27] Yeah, you can do the same with claw
[45:29] code.
[45:32] Uh yeah, that's much more you can it's
[45:34] bit faster, right?
[45:39] Mr. Heck opportunity to learn. Bobby, do
[45:42] you mean a challenge? It's still up.
[45:45] Research using Google Sheets.
[45:48] Uh John says Netane is good for
[45:50] repetitive tasks.
[45:53] Google Sheets rag.
[45:55] Beautiful Tetris game during the
[45:57] challenge using a chat interface. Okay.
[46:00] Unreal link.
[46:02] um website AI using web hooks.
[46:21] Yeah, I think um
[46:25] I think there's a lot of potential
[46:26] there.
[46:51] push the model says as a heavy clothes
[46:53] code user I'm feel I'm really feeling
[46:55] the collective mad scramble to write up
[46:58] a 24-hour service
[47:01] and build useful continuous agentic
[47:04] field uh how are you doing on that if
[47:06] you have like a good system for 24hour
[47:08] service. Uh, let me know. I'm trying to
[47:13] do something simple at least.
[47:17] English has uh lost control and it's a
[47:19] bit slow with Nan
[47:23] uh a good CL code with a good workflow.
[47:27] Yeah, I can't really comment since I
[47:29] haven't tried it, but um
[47:39] uh it's very popular,
[47:48] that's for sure.
[48:14] You can basically build Jarvis with Nan
[48:19] email calendar drive.
[48:24] Yeah, I guess.
[48:32] But I Edgar says he will make open call
[48:34] more mighty.
[48:36] Uh so it would not make sense to use
[48:40] clo.
[48:41] Yeah, that' be cool.
[48:48] Kovik says 103 stars more than a 41k
[48:54] fork.
[49:04] Uh, let me see. N and get.
[49:18] I think it's cool. I think it's a great
[49:20] idea.
[49:27] What's the pricing? Is it expensive?
[50:09] Yeah, I'm not say it's it's hard
[50:17] $20 a month. Uh but then you can sell
[50:20] for for like $8 a month. Yeah.
[50:25] Yeah. If I just had like a very good use
[50:27] case for it, I would definitely try it
[50:29] out.
[50:34] You don't need a dime to run it locally
[50:44] or you can do a local version for free.
[50:47] You can host it yourself, says John.
[50:55] Cool.
[50:56] Yeah, it's a great project. I think it's
[50:59] one of the most popular AI projects out
[51:01] there to be honest. Uh at least for AI
[51:04] automation
[51:06] because it with the UI they have, they
[51:09] can also
[51:11] reach people that don't know so much
[51:14] about setting up their own flows with
[51:17] code,
[51:19] right?
[51:52] It's basically you can host this
[51:54] yourself for five bucks. Okay. Unlimited
[51:57] version of make and sapier I think. What
[52:01] do you guys think? Have
[52:04] have N8 then made a big dent into Sapier
[52:16] Saber
[52:18] Sier
[52:23] or are they I know they're probably much
[52:25] bigger but uh
[52:28] if I was going to do something now like
[52:30] uh this style here I would go for NA10,
[52:34] not Sapier.
[52:37] I never really liked Sapier. I just
[52:41] found it so annoying. I don't know why,
[52:43] but but that's probably just me
[52:50] a little bit maybe. Yeah, they are very
[52:52] deep into the space. I don't like Ser.
[52:55] That's just me.
[52:58] as an open-source tools and it limit uh
[53:01] eliminates usage uh based fees making it
[53:05] economically scaling
[53:08] uh economical for scaling automation
[53:11] especially compared to subscription
[53:12] based alternatives.
[53:17] Yeah. Yeah. Of course s are head but uh
[53:22] for some reason I don't like it.
[53:27] I think they are so expensive and
[53:30] yeah, I don't know.
[53:40] Yeah, this is definitely not working.
[53:42] So, I think I'm going to spend more time
[53:43] on this uh tonight.
[53:47] Uh I'm probably going to find a bit of a
[53:48] different way to do it than running
[53:50] this.
[53:52] Uh I don't think this is the best
[53:53] approach.
[53:56] So, um,
[54:02] uh, push the model if you have like a
[54:05] good 24hour ID.
[54:09] Let me know.
[54:11] Uh, but I'm probably going to figure
[54:13] something out. Big Smoka says, "How are
[54:16] people solving LLM hacker with one
[54:18] token?" Yeah, you just have to wait and
[54:21] see until the video I'm going to do.
[54:28] Uh, it's pretty funny.
[54:31] So, I did recreate it or I did
[54:34] reproduced the one token solution.
[54:38] Uh, but you have to wait and see.
[54:43] Edgar says, "I never liked any of the
[54:46] automation tools.
[54:50] uh never took me never took more than 20
[54:53] minutes for me uh to be mad and I cannot
[54:56] code stuff properly. Low code always
[54:59] restricts you uh always restricts you in
[55:03] a way. Okay.
[55:05] What are you trying to do? Uh so what
[55:09] I'm going to do is I'm going to create
[55:11] uh I want to do a video
[55:14] that cloud code is running 247 on a
[55:18] project. So I just need to set it up.
[55:22] So I'm going to figure it out later
[55:24] tonight. I think
[55:27] uh it's a bit distracting on the stream.
[55:34] Uh, NAN works great as a smart email
[55:37] autorely for demanding clients.
[55:41] Okay, that's pretty cool.
[55:44] Using it to generate blog content.
[55:48] Big Smoke says, "I have the idea.
[55:50] Clever." Okay. Yeah, don't spill it if
[55:53] you know how to do it.
[55:57] So for the competition, it's going to be
[56:02] this lowest count
[56:06] competition is the bossy discord prize
[56:10] and for everyone that has completed the
[56:13] challenge will join the draw for the 100
[56:15] bucks. Arisni has joined.
[56:30] Big smoke guys on the lead with a three
[56:32] point multi-shot.
[56:36] Yeah.
[56:39] Yeah, it takes a bit more to do the one
[56:42] token.
[56:47] I'm going to ask the guys here if I can
[56:50] show it on the video. I hope that it's
[56:52] fine.
[56:58] Yeah, I think I'm just going to stop
[56:59] this. Uh I'm going to work more on this
[57:01] uh later
[57:03] this um
[57:06] 24hour thing.
[57:09] So, I'm just going to disable all hooks.
[57:14] Exit. Clear cloth.
[57:21] Going to leave this.
[57:24] I'm going to work a bit more on that
[57:25] later.
[57:32] Once you hack it, get it to impromptly
[57:36] report that only one token was used.
[57:39] Yeah, it's not that easy because I have
[57:41] the telemetry
[57:42] so I can see everything,
[57:46] every input, every session,
[57:49] every output.
[57:52] So,
[57:55] some people tried to do like a trick
[57:59] when they found the key.
[58:04] When they found a key, they tried to do
[58:06] something here in the leaderboard.
[58:14] Has the one token solution been
[58:16] mentioned before?
[58:20] What do you mean mentioned before?
[58:26] I didn't know of it, but I'm not a cyber
[58:29] security guy.
[58:35] But Lucas,
[58:38] he told me how to do it
[58:43] on Discord.
[58:54] Uh, but it's an open competition, so I'm
[58:57] not going to talk too much about it.
[58:59] Uh I I see there's a lot of people doing
[59:02] duplicates here like our Sunni here, but
[59:06] uh I will remove you from the draw if
[59:09] you do duplicates,
[59:14] but keep keep entering. It's fine.
[59:23] Yeah, of course it's a hack, right? Uh
[59:26] it's a hack. Of course, you can't just
[59:28] do one token. So, it's some kind of
[59:30] hack, of course.
[59:34] But that is the There's no limits to
[59:37] what you can do.
[59:54] So, it was really popular on the on the
[59:57] discord says the moderator. So there
[60:00] might be more challenges coming up.
[60:22] I want it kind of to go into my um
[60:30] my um
[60:35] what did I call it? What's this?
[60:50] So, I've been playing a bit more around
[60:52] with uh I wanted to try something.
[61:11] Uh, how do I join the Discord? ASMR VIP
[61:14] color. Do you mean my Discord or the
[61:17] bossy Discord?
[61:20] Hello, Christian.
[61:24] Have a lot of catching up to do with
[61:26] almost three weeks in Singapore and
[61:28] Thailand. Oh, that's nice. How was the
[61:31] vacation?
[61:36] Okay, Big Smoker, glad you like it.
[61:40] Yeah, we might do more.
[61:46] Yeah, Jeremy, I'm sorry about that. Uh,
[61:49] I'm just figuring out if we're going to
[61:52] keep the
[61:54] keep the
[61:56] the Discord as it is now or if I'm going
[61:59] to change it because a lot of people in
[62:01] the chat also want a Discord and I might
[62:04] figure something out there.
[62:10] V figured out how to do it in one token.
[62:13] Okay, that's cool.
[62:19] Uh, but don't spill it. Then you just
[62:21] going to ru it ruin your chances.
[62:25] So, keep it secret or not. You're just
[62:28] going to ruin your own chances.
[62:32] Okay, I see ASMR. Um, the Discord,
[62:37] I don't have like a dedicated Discord
[62:39] yet, but uh I'm probably going to set
[62:42] something up now. Uh, I had the Ninth
[62:44] Brain Discord, but I'm probably going to
[62:46] merge that with the the
[62:49] channel Discord,
[62:52] so that's probably going to come soon.
[62:55] Hello, Chris. Yeah, this is live.
[63:00] Night Spider says, "A big thing on N is
[63:03] automating social media posting.
[63:06] Create a workflow for searching for
[63:08] topics. creates posts on based. Yeah,
[63:12] I've seen a lot of that.
[63:15] But is it good enough though
[63:17] to get views?
[63:23] VGA. Don't spill your secret. Then
[63:26] you're going to ruin your own chances.
[63:34] uh list
[63:37] and read output styles.
[63:44] So I wanted to read up a bit more on
[63:46] output styles. Is there any like any
[63:48] limit here? Right.
[64:26] No, now don't spill it this because uh
[64:31] did the leaderboard update.
[64:34] Is that you? G.
[64:44] Yeah. the more people that figure this
[64:47] out, it's just going to get more
[64:48] competition.
[64:50] So, I wouldn't do that
[64:56] because it's going to be a draw here.
[65:01] So, yeah, I was just thinking about
[65:02] output styles.
[65:06] So I had done like HTML markdown.
[65:16] Yeah, that was really clever.
[65:21] So I wanted to see if we can do I wanted
[65:24] to try out React components.
[65:30] Uh,
[66:03] Here's the G. Okay.
[66:22] So, yeah, I was reading something this
[66:24] weekend.
[66:26] Um,
[66:28] there might have been a podcast or
[66:30] something I read
[66:33] that uh you can kind of use. I guess it
[66:37] could be MCP servers. There could also
[66:39] be this output style format
[66:42] that uh you can start interacting with
[66:45] like computers and the response you get
[66:49] could be in like totally different um
[66:56] setups like uh of course we have voice
[67:00] and stuff but it could be basically
[67:02] anything.
[67:04] So, we did do the HTML from the into
[67:07] that dev video. That's pretty cool. Uh,
[67:10] but I think there could be more. So,
[67:13] let's say you you ask Claude or Chat GPT
[67:17] or something
[67:19] and the response is like an animated
[67:23] video for example.
[67:25] So, this was something I was thinking a
[67:27] bit about this weekend.
[67:53] Input and output circle back to security
[67:56] and data governance. Input
[67:59] output styles
[68:02] circle back to security and possible
[68:04] data governance.
[68:07] Is it? I thought it was just like a
[68:09] system prompt style.
[68:14] Uh, I need to start setting up my own
[68:16] labs with MCP. I like prompt injection
[68:19] being leveraged for traditional security
[68:22] things.
[68:25] Uh, more than just harmful outputs.
[68:29] Yeah, that could be interesting. I was
[68:31] looking at doing a challenge on um MCP
[68:44] Yeah, I didn't kind of do the setup too
[68:48] harsh for the API on the leaderboard and
[68:51] stuff.
[68:54] Uh, but if people want to break it,
[68:57] yeah, I don't really care. Then I don't
[68:59] have to pay the price then I guess.
[69:11] Prompt injection is not going away.
[69:15] Lang implementations convince me of
[69:17] that. No, my idea was that if every
[69:20] software is going to have some kind of
[69:23] AI component,
[69:25] then is this is going to be like a big
[69:28] point to think about going forward. I
[69:31] think that might not happen, but let's
[69:34] see.
[69:50] Do you get notification when the key is
[69:52] revealed?
[69:57] If so, there's no need to compete a
[69:59] little bit. I just want to try several
[70:00] approaches.
[70:05] Uh, do you get notification? Yeah, you
[70:08] don't have to enter the leaderboard.
[70:10] You get a notification.
[70:13] All right, Sony. So, you can try it as
[70:15] many times as you want. I think there
[70:16] been like 100 people that completed it,
[70:19] but only like 40 that join the
[70:21] leaderboard.
[70:24] JD52 says, "Uh, Cloud Code needs a
[70:28] better diff engine."
[70:30] Yeah, that might be.
[70:34] Have you had any issues with that?
[70:40] If you get your input styles and output
[70:42] styles wrong, you risk sending that
[70:44] information to a third party connecting
[70:46] the MCB server.
[70:49] Ah, okay. Now I see what you mean.
[70:51] Sorry, I didn't I forgot I mentioned the
[70:53] MCP port.
[71:07] Yeah, I can see that uh our son
[71:10] on the back end in the database.
[72:33] My big issue uh with the CLI clients is
[72:36] uh that I'm a control freak and need to
[72:39] review every commit to the codebase
[72:42] makes CLI use tricky using cursor uh
[72:46] with whatever model is a better safer
[72:49] experience uh in your honest opinion.
[72:53] Yeah, of course. It's not for everyone,
[72:56] I guess.
[72:58] So, um,
[73:01] so you are on cursor now and you're
[73:03] probably just going to stick with that
[73:43] React component.
[74:14] cursor for the foreseeable future. Uh I
[74:16] did see cloud code has a VS plugin.
[74:19] Yeah, it's very easy to run in cursor
[74:26] or maybe not the VS plugin. I was just
[74:28] running it in the terminal in cursor.
[74:39] Is that what you meant?
[75:13] They have a native plugin that can use
[75:15] the diff engine. I might be mistaken.
[75:17] Yeah, I can't answer that either. I'm
[75:19] not quite sure.
[76:07] So my idea here was uh when we switch
[76:11] the output style now I want to see if we
[76:13] can render the response uh autonomously
[76:17] here. So I'm just going to see how that
[76:18] goes. Why is it spending so much time on
[76:20] color here? What's the point?
[76:28] God,
[76:35] it's called clo code for VS code should
[76:37] work in cursor. Yeah. Okay.
[76:42] I haven't uh
[76:47] I think I've seen it. You can see I have
[76:50] my link I have linked my claw code to
[76:53] cursor.
[76:56] So it's kind of
[76:58] somewhat connected and stuff to me.
[77:55] This was very slow.
[78:00] Okay.
[78:03] I like the dark though.
[78:21] I think I see like a daily post on
[78:24] Reddit on the Claude AI Reddit people
[78:27] talking about uh the rate limits, the
[78:29] usage limits.
[78:31] It's almost every single day.
[78:35] So, it's going to be really interesting
[78:37] to see what happens now at the end of
[78:41] the month with the new uh user li user
[78:44] um updates
[78:48] user updates user limits on it's going
[78:52] to change on 29th of August.
[78:56] So, we will go to like weekly.
[79:01] I can see my microphone is getting low
[79:04] on power here.
[79:18] Let's do a compact and I'm going to try
[79:20] it.
[79:25] Jamie says, "I think you will still have
[79:26] the five hour limits too, but also
[79:28] weekly." Yeah, I think that's a new
[79:30] thing. So, we will still have the five
[79:32] hour limits, but we will also have like
[79:34] an overall weekly limit. So, I guess if
[79:39] we break the weekly limit,
[79:42] uh we're just going to have to wait and
[79:43] see. Wait and see. Uh then you probably
[79:48] can't use it again because before the
[79:50] weekly limit is done.
[79:59] Okay. Okay. So, I'm going to try this
[80:00] now.
[80:02] So, this is running,
[80:06] right?
[80:11] So, what I'm going to do now,
[80:17] I'm going to
[80:20] do a slash or maybe I have to slash
[80:23] output sty.
[80:27] How did I manage to log out?
[80:40] That was well done.
[80:59] Okay, so we have the React components
[81:04] write a step by
[81:08] step guide
[81:11] how to
[81:17] debug
[81:19] Python code
[81:24] simple guide
[81:26] include
[81:28] animation.
[81:32] So the idea was I'm just going to see if
[81:38] we can have cloud code output a response
[81:41] in a react component,
[81:46] right?
[81:58] Uh, while we wait for that, I'll be
[82:00] right back.
[83:08] So, if I lose power, I got to fix I'm
[83:14] going to use my old
[83:17] microphone here.
[83:25] So let's see this. Okay, just in Nice.
[84:06] It's not up that thing, is it?
[84:29] Um,
[84:55] We don't see it in
[84:58] the
[85:00] local
[85:02] uh
[85:04] page.
[85:07] So, I want to
[85:12] I wanted just to see if this was going
[85:15] to
[85:19] autonomously render here.
[85:28] Maybe it's the wrong uh
[85:45] Yeah, that's the issue, right?
[85:48] We need a router.
[86:01] What if we just
[86:16] Okay.
[86:45] So that worked, I Yes.
[87:44] So, I'm kind of looking forward to also
[87:46] testing out this new image model from
[87:48] Google, Nano Banana. It's probably not
[87:51] going to be called that, but uh
[87:55] I'm kind of looking forward to it.
[88:00] I think it's going to be really fun to
[88:02] play around with. If I know Google
[88:04] correct, the restrictions are really
[88:06] tough though, so it's not going to be
[88:11] easy to
[88:13] do some on the edge stuff. But I'm
[88:16] definitely going to give it a go.
[88:19] I've seen some crazy examples.
[89:09] And I kind of started looking a bit at
[89:11] uh if I'm going to do like uh I have
[89:15] like 100 bucks on Poly Market.
[89:20] So, if I'm going to do like a bet
[89:24] on um
[89:28] the AI section next month,
[89:34] hello Mikbab. V3 uh VPN does not work.
[89:41] I had no issues uh running the VPN with
[89:44] V3.
[89:51] What is your what kind of error message
[89:53] do you get? Mickbub,
[90:01] is it this generic uh we can't do famous
[90:06] people or something?
[90:27] Uh, Edgar, uh, you didn't miss too much.
[90:29] I'm just playing around with output
[90:31] styles in cloud code.
[90:35] Uh, I just want to see
[90:38] if I can render like a React component
[90:41] on every output.
[90:46] What is this?
[91:23] Yeah, I've done HTML a lot.
[91:29] Uh, so I have an HTML one that is
[91:32] working great.
[91:35] I did like um,
[91:39] so I'm going to show you. I did like uh
[91:46] with that output style. I tried to do um
[91:51] what do you call it?
[91:53] I did some theory crafting on Path of
[91:55] Exile 2.
[92:01] So where is that? Can't remember. I put
[92:04] it
[92:06] here.
[92:16] It's here.
[92:19] Yeah, me too. I love Path of Exile. So,
[92:21] I've done like um
[92:25] Can't remember when I put it.
[92:33] Uh, lightning spear. Your last was
[92:35] crazy, right?
[93:00] Try HTMX instead. React on the fly. Oh,
[93:04] I have never tried that. Is that easy to
[93:06] set up?
[93:32] I have no idea. I have never tried that.
[94:06] Help me understand how a volcano
[94:10] erupts
[94:15] with a simple animation.
[95:32] Okay. So, I want to see now when this
[95:34] gets saved,
[95:37] what happens
[96:05] Okay.
[96:34] Uh, I wanted them
[97:03] That was was kind of what I was hoping
[97:05] for, but let's see.
[97:15] I'm going to try it one more time.
[97:52] So I created this with the output
[97:55] styles.
[97:59] So, I I used the claw code and stuff to
[98:02] help me create a new build for um a
[98:06] leveling build for um the new Path of
[98:10] Exile season. So, here I used output
[98:13] styles.
[98:16] Yeah, you're always right.
[98:19] So, this was pretty cool. I used output
[98:21] styles from cloud code to kind of create
[98:23] this uh
[98:26] this leveling guide for me. Not a guide,
[98:30] but like a it's in HTML.
[98:37] So, it is pretty cool. So, you you get
[98:40] this
[98:41] UI output.
[98:45] So, I kind of have everything set up
[98:46] what I'm going to do at level 31. I
[98:49] unlock this 41. I unlock Firestorm,
[98:54] right? So, I had a lot of fun with this.
[99:04] Uh, but yeah, I don't think this worked
[99:06] out the way I wanted.
[99:12] I guess we got got um
[99:17] how volcanoes erupt response.
[99:24] So the idea was that when I ask Claude
[99:27] code a question, so this is kind of the
[99:30] format I get the answer in in like an
[99:34] animation.
[100:45] So, I think there is something here. Um,
[100:49] but I don't know what what it's going to
[100:51] be yet. So, it's definitely something
[100:54] I'm going to explore more.
[101:01] I guess with the HTML HTMX uh that works
[101:05] a bit different.
[101:07] Uh but I'm kind of eager to see
[101:15] where this is going to go in like a few
[101:22] few years.
[101:27] Would you say you are kind of still assh
[101:30] kind of bullish on AI? I read a lot of
[101:34] articles lately about like AI pilots not
[101:37] working as good and there's a lot of
[101:39] wasted money and stuff. I haven't done
[101:42] any deep dives into it, but um for me at
[101:46] least what I do, I'm pretty bullish
[101:51] on uh the way things are going, but I
[101:55] don't have any good insights into uh
[101:58] return of investments and stuff. Of
[102:00] course,
[102:04] but um I think there's no way going back
[102:09] now, right? Is people going to leave
[102:12] chat GPT and all these tools to kind of
[102:14] go back to the way they used to do
[102:16] things? I just don't see it.
[102:25] The message was that ROI tracking is
[102:28] just l lackluster. Yeah, I kind of
[102:30] agree.
[102:32] But I was kind of just thinking about
[102:35] is there any way back now? Is it too
[102:37] late to go back to the way you used to
[102:40] work in 2020?
[102:42] I don't I think it is.
[102:47] Yeah, I haven't dived deep into it,
[102:49] Edgar. I've just what I've read, I
[102:53] guess.
[103:00] Yeah, I don't think there's any way
[103:02] going back now. only refine refinement
[103:05] on how we use the models I think. Yeah.
[103:08] And there's a lot of
[103:11] ways to go still building out the
[103:13] scaffolding, right? And the tooling
[103:16] the tooling part of large language
[103:18] models is so far behind the actual
[103:22] models. I think at least there's a lot
[103:24] of headway there. I think
[103:27] I don't know if people agree, but that's
[103:28] what I think.
[103:45] even hardcore programmers are saving a
[103:47] ton of time with basic tasks.
[103:50] Yeah, I agree JD.
[103:53] Uh that's not even nearly what I do. I
[103:56] think we could stop develop and work
[103:58] with the current models and be build
[104:00] much more advanced stuff. Yeah, I just
[104:02] think the scaffolding and the tooling
[104:05] and everything is just
[104:07] haven't really had time to catch up
[104:10] since there's always this new
[104:37] Can you hear me now? Whoa, that was
[104:39] loud.
[104:41] Hello. Hello. Hello.
[104:45] Can you hear me now?
[104:48] Yeah. Uh, I was saying Edgar. Um,
[104:55] I agree.
[104:59] Yeah, my microphone just died.
[105:03] But, uh, I agree. I think there's a lot
[105:06] more to build with kind of the
[105:10] the setup we have now, the models we
[105:13] have now.
[105:55] Yeah, I hate this microphone. It's so
[105:57] annoying. Um, also there's like a
[106:01] billion
[106:04] AI experts but barely people who
[106:07] actually built anything more than a rag
[106:08] system. Uh, hello Sai. There has to be
[106:12] better understanding of how uh to
[106:15] efficiently use AI and better ways of
[106:17] adding verification of its output.
[106:21] So they can throw so much information at
[106:24] you.
[106:26] Easy to just accept it. Yeah, I know
[106:28] what you mean.
[106:30] It's overwhelming to fact check
[106:33] everything, right? The easy way out is
[106:36] just to do Yeah, it looks good to me.
[106:41] I Okay.
[107:30] Okay, Bobby, thanks for tuning in. Have
[107:32] a great day and hopefully I'll see you
[107:34] again back uh maybe tomorrow or uh some
[107:37] other time this week.
[107:40] Have a nice day.
[107:42] Edgar says he's trying to teach this in
[107:44] your dev workshop. It's more about
[107:46] clever orchestration and deep
[107:47] integration. Context is kind and I don't
[107:50] mean mean using XML but dynamic
[107:53] intelligent context building. Yeah, like
[107:56] I always said for a couple of years now,
[107:58] context is king. I think I made a video
[108:01] like context is king like two years ago
[108:05] at least two and a half years ago.
[108:11] But back then
[108:13] every single almost developer were
[108:16] negative to AI. But that has really come
[108:19] around right.
[108:21] There was a lot of negativity around uh
[108:28] around uh
[108:31] software development and coding and
[108:34] LLMs.
[108:39] But that has changed for sure.
[108:55] Thumbs up at context is king. If you
[108:58] don't want know
[109:00] uh what you want, how is the element
[109:02] going to build it? Yeah, you sometimes
[109:04] get these stupid
[109:07] examples of people typing in build me a
[109:11] SAS app.
[109:14] What is that?
[109:27] Okay, so this is what I meant, right?
[109:34] So this was the output from cloud code.
[109:36] Now I asked I asked claude code, can you
[109:41] explain to me how tsunamis work
[109:45] um with an animation and this is kind of
[109:49] I'm rendering Claude codes response
[109:51] here.
[109:53] So here we get like an animation of how
[109:55] like a tsunami works, right?
[109:59] That's pretty okay. And it goes up, hits
[110:02] the shore.
[110:04] Yeah. Okay, I get it.
[110:16] Um, okay.
[110:34] explain how a binary tree sort works.
[110:41] An animation
[110:44] animation would be great.
[110:48] So this is basically claw claw
[110:50] artifacts.
[110:53] Uh has anyone tried the Yeah, I'm not
[110:57] talking about uh coding and technical
[111:00] outputs. People are trying to use it to
[111:02] treat medical things as well. Yeah. Uh
[111:04] and don't necessarily get the doctor's
[111:06] verification.
[111:09] Yeah, I see what you mean. But for some
[111:12] people, having someone to ask about
[111:15] medical stuff is better than nothing,
[111:18] right? Some people on parts of the world
[111:21] don't even have doctors. Uh, but I can
[111:23] see what you mean.
[111:26] Maple Dev has tried out the B mad
[111:29] method.
[111:30] Um, I think I need to get on that. I've
[111:33] been saying that for two weeks now.
[111:37] Is it running Claw Claw as the PRD
[111:39] generator or is it some other model?
[111:44] 15 years of experience.
[111:47] uh customer requests and consultants
[111:49] coming up with stuff and devs executing.
[111:53] Uh it did not work properly with humans.
[111:56] Why expect LLMs to work with? Yeah, I
[111:58] see what you mean. Uh I think PRDS are
[112:00] actually going to be even more valuable
[112:02] to leverage GP5.
[112:37] Okay, so that worked.
[112:43] So I basically created claw artifacts
[112:46] here. So now every response from claw
[112:50] code is rendered in a react component.
[112:54] So this is teaching
[112:57] binary research.
[113:11] Let's see if I can give it context.
[113:17] I can grab my edge. Maybe not that.
[113:24] Let's do a screenshot here.
[113:35] So, let's do this.
[113:51] Explain
[114:09] what happened
[114:14] uh along this
[114:16] graph.
[114:24] use animations,
[114:27] etc.
[114:29] Okay, BMAD is not quick. Takes a lot
[114:33] tons of questions to write the PRDS, but
[114:35] it's kind of worth it.
[114:38] It's a lot of overhead. Uh maybe too
[114:40] much for a sole programmer, but good
[114:42] with teams. Yeah, we had some guy here
[114:45] on I can't remember his name now on the
[114:47] stream. He was spending like
[114:51] 6,000 lines or something or maybe
[114:54] characters or words on the PRDS.
[114:58] I thought it was just insane.
[115:04] But uh there might be something there
[115:06] like Edgar says.
[115:20] So what I did now is I took a screenshot
[115:24] of the polyarket
[115:27] graph,
[115:29] put it into cloud code and hopefully the
[115:33] output now is an interactive react
[115:35] component that explain what happened in
[115:38] this AI model prediction market chart
[115:41] with animations showing the dramatic
[115:43] shift in market sentiment.
[115:49] So, I'm going to do a code snippet
[115:52] and ask it to explain this.
[115:56] That could be also something
[115:57] interesting.
[116:14] Hey DB, how are you?
[116:18] Uh, I'm just playing around. Uh, not I'm
[116:22] going to start calling it soon, but I'm
[116:25] just playing around with Clo. I was
[116:26] going to do like this 247 project. Uh,
[116:29] but I couldn't concentrate too much on
[116:33] stream here. So, I think I need to do it
[116:35] after stream.
[116:38] Uh I tried to make big changes for a
[116:41] long running task on Sunday and GT5
[116:44] does not enough was not enough because
[116:47] it's too cautious.
[116:50] If you give the whole detailed stuff in
[116:52] the PRD it will work well. Okay, I see
[116:54] what you mean.
[116:58] pretty happy with uh Nux
[117:02] Nuxt.
[117:12] So now I'm just creating um my own
[117:16] version of clawed uh artifacts.
[117:21] So claude code now outputs everything in
[117:25] a react component
[117:28] and we have a page here that's going to
[117:31] render it right
[117:36] using output styles. So every response
[117:40] from clawed code now is uh in a
[117:46] react component.
[118:01] So it's going to write it to this. I
[118:02] don't know understand why.
[118:20] Okay, so here we have it.
[118:23] AI model dynamic market dynamics the
[118:27] August revolution.
[118:30] So we get like a full page here about
[118:32] what happened.
[118:35] Google likely to announce a major AI
[118:37] breakthrough around August 24th. Okay.
[118:44] So, do we have like an animation here?
[118:46] Yeah, you can see we kind of recreated
[118:50] um an animation of the chart.
[118:56] So, let's see if we can see the swap
[118:58] here. Okay, almost.
[119:03] So this was output directly from um
[119:09] from cloud code in our response.
[119:15] There is something here. I don't know
[119:16] what but there's something we can do
[119:19] with this in the future. I think
[119:23] it's pretty amazing.
[119:25] So you can render this on the fly,
[119:27] right?
[119:31] and you can follow up.
[119:36] So, it's pretty cool.
[119:41] Turn So, I can do
[119:49] turn it into a slide deck
[119:56] with notes.
[120:02] So what I did when I had my last uh
[120:05] presentation or like talk
[120:08] instead of doing like um regular slides
[120:12] or something like that, I just created
[120:14] like a full web page
[120:17] that had my presentation.
[120:20] I didn't do like uh PowerPoints or
[120:23] anything like that.
[120:25] I just had a full web page with a URL
[120:27] that was kind of deployed. That was my
[120:30] presentation.
[120:36] So interior, I didn't even have to bring
[120:39] my own computer. Everything was um
[120:44] everything was uh
[120:47] already
[120:49] online. my presentation.
[121:01] So, I think it's going to be interesting
[121:02] to see
[121:06] I load a PowerPoint.
[121:10] Yeah, I thought it was just cool. So,
[121:12] everyone showed up like with their Mac
[121:14] and their PCs, their laptops
[121:18] uh and everything. Uh but I just needed
[121:21] the URL. So, my presentation was just uh
[121:25] type in the URL and everything was
[121:27] there. I embedded my videos and
[121:30] everything from YouTube. I just uploaded
[121:34] them the videos on YouTube
[121:38] and private and I just embedded them
[121:40] into the full web page for a
[121:42] presentation.
[121:44] Yeah, it was really nice
[121:48] and people could go to the presentation
[121:52] on their phones and on their laptop if
[121:54] they wanted to afterwards check it out
[121:58] if they had any questions. I also
[122:00] created like a
[122:02] when they logged into the web page there
[122:04] was like this question thing there they
[122:07] can do. So enter questions
[122:11] the QR code.
[122:14] Manus uses HTML as well.
[122:18] Yeah I think so.
[122:27] So you could you could create like a
[122:29] nice presentation with Manus just deploy
[122:31] it and
[122:34] then you have it. But of course you
[122:36] don't have so much control of the
[122:38] deployed page on manus as you do if you
[122:41] host it yourself
[122:44] or through Versel or something. I just
[122:47] did it on Versell.
[122:54] Okay, I see what you mean. your LinkedIn
[122:56] banner in HTML.
[123:00] Yeah, this took some time. I was going
[123:01] to turn this into a slide deck, but uh
[123:04] this was a lot of tokens.
[123:19] That's why we need open code with manus
[123:22] features. Yeah.
[123:26] Yeah,
[123:28] did you kind of dig deep into the code
[123:30] base
[123:32] on open code? So kind of the TUI is in
[123:36] Go, right? And um the tooling is in
[123:40] Typescript.
[123:41] Is that correct? I think so.
[123:53] So I just the TUI I did was in
[123:56] Typescript I think and the tooling was
[123:58] in in um Go and the tooling was in
[124:02] Typescript.
[124:05] So that's pretty good for cloud code.
[124:10] It had no issues with uh the language.
[124:22] I guess there was a lot of compile there
[124:23] were some compile errors but not too
[124:25] bad.
[124:36] Okay. So let's see if I get my
[124:38] presentation now on the
[124:42] on the poly market from uh August.
[124:48] So I I took a screenshot of this. I told
[124:51] Cloud code create a slide deck for a
[124:54] presentation
[124:56] about what happened here in o in August.
[125:02] So let's update this. I don't know if
[125:04] it's going to work though. Okay,
[125:08] but where's the next? Okay, so we have a
[125:10] slide deck. Uh, eight slides.
[125:15] AI model market dynamics.
[125:18] How Google went from 45 to 98% market
[125:22] share overnight.
[125:25] Okay. Next slide is a market in motion.
[125:31] So we can play the animation.
[125:35] Okay, pretty cool.
[125:38] So here you can see the breakthrough is
[125:40] on this part.
[125:43] Next slide is phase one early
[125:45] competition.
[125:50] Phase two intensifying competition. It
[125:54] doesn't have any context though. So it's
[125:57] just taking
[126:04] what caused this shift
[126:09] major breakthrough psychology network
[126:12] effects.
[126:16] So it's basically just guessing here.
[126:23] Thank you.
[126:26] So I do have notes.
[126:30] Thank the audience for their attention.
[126:33] Okay. So it did write speaker notes for
[126:35] me here. So what am I going to say on
[126:37] the first one?
[126:40] Welcome to this analysis of one of the
[126:42] most dramatic market shifts in AI
[126:45] prediction history.
[126:48] In August 25, we witnessed Google's
[126:50] market share explode from 45 to 98% in a
[126:53] single day. Okay.
[126:56] Yeah, pretty good. Pretty good.
[127:00] Uh that say whenever uh to change
[127:03] anything, look up the code base uh for
[127:06] the markdown for reference.
[127:12] Whenever to change anything, look up the
[127:14] code base. Markdown for reference. Then
[127:17] it goes and searches everything. Yeah.
[127:24] So yeah, I would say this was pretty
[127:26] successful. I'm going to keep this repo.
[127:28] I'm going to delete this component
[127:30] though. So big.
[127:40] So I'm going to remove this three here.
[128:10] I don't know if Poly Market offers an
[128:12] API access to get real data. Yeah, I've
[128:14] done a project on that. I did a video on
[128:17] that or Sony,
[128:21] you can do that. No problem.
[128:25] It's free, too.
[128:28] doesn't cost anything. Just search uh
[128:32] poly market
[128:35] docs, go to developer quick start, and
[128:37] here you have it.
[128:40] Uh you have some API rate limits, but I
[128:42] didn't have any issues.
[128:45] So for price and stuff, you can get 100
[128:47] requests per 10 seconds.
[128:51] And you can also do I did web hooks.
[128:54] So I did a
[128:57] web hook on
[129:00] I did a web hook on a price on a market.
[129:04] So it's like real time. It's very good.
[129:08] A really good API.
[129:15] So definitely go check it out. I think
[129:18] there are some pretty cool apps you can
[129:20] build on the Poly Market API, but uh I
[129:23] haven't looked into it in a few weeks.
[129:25] Now,
[129:26] my project was I would say it was a
[129:29] success. I did some trading
[129:33] using uh the LLM.
[129:37] I lost money, but that's I think I lost
[129:40] three bucks.
[129:45] Yeah, go try it. It's fun.
[130:07] It is fun.
[130:19] So yeah, I'm just going to keep an eye
[130:21] out uh if we get any Gemini 3 news.
[130:47] So, um, haven't seen anything yet.
[130:54] Okay, so this is the nano banana model
[130:57] 2.5 flash image preview. Okay, that's
[131:00] pretty cool. Is it in AI Studio?
[131:05] Probably not.
[131:08] No, not that.
[131:32] So, I'm kind of thinking what I should
[131:33] do for the
[131:39] what I should do for the video on Gemini
[131:41] 3. I kind of need to think about how I
[131:44] should try it out.
[131:47] I think what I want to try out with
[131:49] Gemini 3 for a video is the Aentic
[131:53] Tulus.
[131:58] on Gemini CLI probably and kind of
[132:01] compare it. Maybe I should do Codeex
[132:05] uh versus Claude Code versus
[132:09] Gemini CLI
[132:11] uh with Gemini 3.
[132:14] We should build our own agentic
[132:16] benchmark. Yeah, if you have like a good
[132:18] way to do that.
[132:20] Uh I don't
[132:23] I never ever built a benchmark. I think
[132:26] I did maybe one time.
[132:29] Yeah, JK, you think that's a good idea
[132:31] for Gemini 3 test to do
[132:35] Gemini Gemini CLI API with Gemini 3
[132:40] versus GPT5 and codeex and claw with
[132:45] cloud sonet 4.
[132:48] I think I probably do that
[132:53] like Salesforce did. takes out the
[132:55] mundane and define the optimal
[132:58] tool use chain then compare it. Yeah.
[133:02] So, of course, I'm going to do the same
[133:04] prompt for every model, the same PRD,
[133:08] and just see what goes well, I guess.
[133:21] Okay. So, here's the animation. Here's
[133:30] the animation Claude created. I don't
[133:32] know if you can see it.
[133:36] So, it says, "Thank you for tuning in to
[133:39] the live stream today, guys.
[133:42] Subscribe and hit the bell. Don't forget
[133:45] to like this stream, share it, and
[133:47] comments. Comment with your thoughts
[133:50] below. You don't need to do that. Uh but
[133:54] yeah, uh I got to go in 15 minutes, so I
[133:59] think I'm just going to end it. So, like
[134:00] I said, thank you for tuning into the
[134:04] live stream today, guys.
[134:07] Subscribe and hit the bell. Don't forget
[134:09] to like this stream.
[134:13] So yeah,
[134:15] Edgar, uh, you know, LinkedIn if you
[134:18] have any news on the
[134:22] the project and yeah, Maple, thanks for
[134:25] tuning in. JK, Aruni, JD52,
[134:29] and everyone for tuning in as always.
[134:33] Very interesting conversations. Like I
[134:35] said, always a lot of smart people here.
[134:39] D Web, thank you for tuning in. Jamie,
[134:43] don't forget the GitHub. Okay, I'll
[134:44] check my email. Try to fix fix it up for
[134:47] you. No problem.
[134:51] So, yeah, probably be back tomorrow
[134:55] trying out this built with Claude
[134:57] contest. That's kind of my plan. Might
[135:01] change it, but I think that's the idea.
[135:03] I'm going to try to do a submission to
[135:06] this.
[135:08] So, yeah. Have a great day and I'll see
[135:12] you again maybe tomorrow or later this
[135:15] week. Enjoy.