name: Daily Tech Digest Pipeline

on:
  schedule:
    # Run daily at 6 AM UTC (adjust timezone as needed)
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Allow the workflow to push changes
  packages: read   # Allow reading packages if needed

jobs:
  daily-podcast-digest:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper git operations
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-v1
        restore-keys: |
          ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-
          ${{ runner.os }}-pip-
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # sqlite3 is built into Python, no need to install via pip
        
    - name: Cache system dependencies
      uses: actions/cache@v4
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-cache-v1
        restore-keys: |
          ${{ runner.os }}-apt-cache-
          
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg sqlite3
        
    - name: Restore database from previous run
      uses: actions/cache@v4
      with:
        path: |
          podcast_monitor.db
          audio_cache/
          transcripts/
        key: podcast-data-${{ github.run_id }}-${{ github.run_attempt }}
        restore-keys: |
          podcast-data-${{ github.run_id }}-
          podcast-data-
          
    - name: Set up environment variables
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY" >> $GITHUB_ENV
        echo "ELEVENLABS_API_KEY=$ELEVENLABS_API_KEY" >> $GITHUB_ENV
        echo "GITHUB_TOKEN=$GITHUB_TOKEN" >> $GITHUB_ENV
        
    - name: Run RSS-only podcast pipeline (GitHub Actions mode)
      run: |
        python3 daily_podcast_pipeline.py --rss-only
        
    - name: Debug transcript status
      if: always()
      run: |
        echo "=== Transcript Directory Status ==="
        ls -la transcripts/ || echo "No transcripts/ directory"
        echo "=== Digested Transcripts ==="
        ls -la transcripts/digested/ || echo "No transcripts/digested/ directory"
        echo "=== Database Status ==="
        sqlite3 podcast_monitor.db "SELECT COUNT(*) as total_episodes, status, COUNT(*) as count FROM episodes GROUP BY status;" || echo "Database query failed"
        
    - name: Upload generated artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: podcast-digest-${{ github.run_number }}
        path: |
          daily_digests/
          transcripts/
          transcripts/digested/
          podcast_monitor.db
        retention-days: 30
        
    - name: Commit and push changes
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all changes including both databases
        git add podcast_monitor.db youtube_transcripts.db
        git add daily_digests/
        git add transcripts/
        git add transcripts/digested/
        git add daily-digest.xml
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Create detailed commit message
          commit_msg="Daily podcast digest update - $(date -u +%Y-%m-%d)

RSS episodes processed and YouTube episode statuses synced
- Updated podcast_monitor.db (RSS episodes marked as digested)
- Updated youtube_transcripts.db (YouTube episodes marked as digested)  
- Generated daily digest and TTS audio
- Updated RSS feed"

          git commit -m "$commit_msg"
          git push
          echo "âœ… Committed digest updates to both databases"
        fi
        
    - name: Create release with digest
      if: success() && hashFiles('daily_digests/*.md') != ''
      uses: softprops/action-gh-release@v1
      with:
        tag_name: digest-${{ github.run_number }}
        name: Daily Tech Digest ${{ github.run_number }}
        files: |
          daily_digests/*.md
          daily_digests/*.mp3
        body: |
          Automated daily tech digest generated on $(date -u +%Y-%m-%d)
          
          Contains podcast summaries and audio from the latest tech episodes.